{"version":3,"sources":["sailboat.svg","SailBoat.js","Ocean.js","App.js","reportWebVitals.js","index.js"],"names":["Sailboat","boatId","position","onMouseUp","onMouseDown","onMouseEnter","onMouseLeave","handleControllerMouseDown","boatDimensions","handleControllerMouseUp","hover","translateValue","left","top","styles","zIndex","backgroundColor","width","height","transform","border","controllerStyles","controllers","id","style","e","map","controller","getControllers","src","SailBoat","alt","INITIAL_POSITION","INITIAL_DIMENSIONS","Ocean","useState","setDragStartingPosition","dragOffset","setDragOffset","positions","setPositions","idOfSelectedBoat","setIdOfSelectedBoat","idOfHoveredBoat","setIdOfHoveredBoat","sailBoatIds","setSailBoatIds","isDragging","setIsDragging","isTransforming","setIsTransforming","hoverStates","setHoverStates","controllerId","setControllerId","boatsDimensions","setBoatsDimensions","handleMouseDown","newDragStartingPoint","clientY","clientX","startDragging","handleMouseEnter","newArr","handleMouseLeave","handleMouseUp","overLapExists","newPosition","overLaps","oldPosition","overlapX","push","reduce","accumulator","currentValue","getBoatLaunchCoords","i","startTransforming","stopPropagation","calculateDimensionChange","offsetX","offsetY","newDimensionsArr","newPositionArr","getSailBoats","sailBoatId","useEffect","console","log","onClick","length","onMouseMove","moveOffset","calculateMove","App","userSelect","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d449a90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sailboat.b45a8d46.svg\";","import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport SailBoat from './sailboat.svg'\nexport default function Sailboat({\n    boatId,\n    position,\n    onMouseUp,\n    onMouseDown,\n    onMouseEnter,\n    onMouseLeave,\n    handleControllerMouseDown,\n    boatDimensions,\n    handleControllerMouseUp,\n    hover,\n}) {\n    const translateValue = `translate(${position.left}px, ${position.top}px)`;\n    // const skewValue = `skew(${height*4}px, ${width*2}px)`;\n    const styles = {\n        zIndex: 10,\n        position: \"absolute\",\n        top: \"0px\",\n        left: \"0px\",\n        backgroundColor: \"pink\",\n        width: boatDimensions.width + \"px\",\n        height: boatDimensions.height + \"px\",\n        transform: translateValue,\n        border: \"1px solid transparent\",\n    };\n\n    if (hover) {\n        styles.border = \"1px solid black\";\n    }\n    const controllerStyles = {\n        position:'absolute',\n        height: \"8px\",\n        width: \"8px\",\n        backgroundColor: 'black',\n        zIndex: 11,\n\n    }\n    const controllers = [\n        {\n            id: \"topLeft\",\n            style: {\n                top: \"-4px\",\n                left: \"-4px\",\n            },\n        },\n        {\n            id: \"topRight\",\n            style: {\n                top: \"-4px\",\n                left: (boatDimensions.width - 4) + \"px\",\n            },\n        },\n        {\n            id: \"bottomRight\",\n            style: {\n                top: (boatDimensions.height - 4) + \"px\",\n                left: (boatDimensions.width - 4) + \"px\",\n            },\n        },\n        {\n            id: \"bottomLeft\",\n            style: {\n                top: (boatDimensions.height - 4) + \"px\",\n                left: \"-4px\",\n            },\n        },\n        {\n            id: \"top\",\n            style: {\n                top: \"-4px\",\n                left: (boatDimensions.width/2 - 4) + \"px\",\n            },\n        },\n        {\n            id: \"right\",\n            style: {\n                top: (boatDimensions.height/2 - 4) + \"px\",\n                left: (boatDimensions.width - 4) + \"px\",\n            },\n        },\n        {\n            id: \"bottom\",\n            style: {\n                top: (boatDimensions.height - 4) + \"px\",\n                left: (boatDimensions.width/2 - 4) + \"px\",\n            },\n        },\n        {\n            id: \"left\",\n            style: {\n                top: (boatDimensions.height/2 - 4) + \"px\",\n                left: \"-4px\",\n            },\n        },\n    ];\n\n    const getControllers = () => {\n        if (hover){\n            return controllers.map((controller) => {\n                return <div\n                onMouseUp={(e)=> handleControllerMouseUp(e)}\n                onMouseDown={(e)=> handleControllerMouseDown(e, boatId, controller.id)}\n                key={controller.id}\n                style={{...controllerStyles, ...controller.style}}></div>\n            })\n        }\n    }\n    return (\n        <div\n            onMouseEnter={(e) => onMouseEnter(e, boatId)}\n            onMouseLeave={onMouseLeave}\n            onMouseUp={onMouseUp}\n            onMouseDown={(e) => onMouseDown(e, boatId)}\n            style={styles}\n        >\n            {getControllers()}\n            <img width=\"100%\" height=\"100%\" src={SailBoat} alt=\"sailboat\" />\n        </div>\n    );\n}\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\n\nimport SailBoat from \"./SailBoat\";\n\nconst INITIAL_POSITION = {\n    top: 0,\n    left: 0,\n};\n\nconst BOAT_HEIGHT = 50;\nconst BOAT_WIDTH = 50;\nconst INITIAL_DIMENSIONS = {\n    height: BOAT_HEIGHT,\n    width: BOAT_WIDTH\n}\n\n\nexport default function Ocean() {\n    const [dragStartingPosition, setDragStartingPosition] = useState([\n        INITIAL_POSITION,\n    ]);\n    const [dragOffset, setDragOffset] = useState([INITIAL_POSITION]);\n    const [positions, setPositions] = useState([INITIAL_POSITION]);\n    const [idOfSelectedBoat, setIdOfSelectedBoat] = useState(0);\n    const [idOfHoveredBoat, setIdOfHoveredBoat] = useState(0);\n    const [sailBoatIds, setSailBoatIds] = useState([0]);\n    const [isDragging, setIsDragging] = useState(false);\n    const [isTransforming, setIsTransforming] = useState(false);\n    const [hoverStates, setHoverStates] = useState([false])\n    const [controllerId, setControllerId] = useState(null)\n    const [boatsDimensions, setBoatsDimensions] = useState([INITIAL_DIMENSIONS])\n\n    const calculateMove = () => {\n        const { left: offsetX, top: offsetY } = dragOffset;\n        const newPosition = {\n            top: offsetY,\n            left: offsetX,\n        };\n        let newArr = [...positions];\n        newArr[idOfSelectedBoat] = newPosition;\n        setPositions(newArr);\n    };\n\n    const startDragging = (e) => {\n        const newDragStartingPoint = {\n            top: e.clientY,\n            left: e.clientX,\n        };\n        setDragStartingPosition(newDragStartingPoint);\n        setIsDragging(true);\n    };\n\n    const handleMouseDown = (e, idOfSelectedBoat) => {\n        setIdOfSelectedBoat(idOfSelectedBoat);\n        if (!isDragging) {\n            startDragging(e);\n        }\n    };\n\n    const handleMouseEnter = (e, idOfHoveredBoat) => {\n        let newArr = [...hoverStates];\n        newArr[idOfHoveredBoat] = true;\n        setIdOfHoveredBoat(idOfHoveredBoat);\n        setHoverStates(newArr)\n    }\n\n    const handleMouseLeave = (e) => {\n        let newArr = [...hoverStates];\n        newArr[idOfHoveredBoat] = false;\n        setIdOfHoveredBoat(null);\n        setHoverStates(newArr)\n    }\n\n    const handleMouseUp = (e) => {\n        setIsDragging(false);\n        setIsTransforming(false);\n    };\n\n    const onMouseMove = (e) => {\n\n        const moveOffset = {\n            left: e.clientX,\n            top: e.clientY,\n        };\n        if (isTransforming) {\n            setDragOffset(moveOffset);\n            calculateDimensionChange(e)\n            \n        }\n        if (isDragging === true) {\n\n            setDragOffset(moveOffset);\n            calculateMove();\n        }\n    };\n\n    const overLapExists = (newPosition) => {\n        var overLaps = [0];\n        for (var oldPosition of positions) {\n\n            var overlapX = !(\n                newPosition.left + BOAT_WIDTH < oldPosition.left ||\n                newPosition.left > oldPosition.left + BOAT_WIDTH\n            );\n            var overlapY = !(\n                newPosition.top + BOAT_HEIGHT < oldPosition.top ||\n                newPosition.top > oldPosition.top + BOAT_HEIGHT\n            );\n            if (overlapY && overlapX) {\n                overLaps.push(1);\n            }\n        }\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        return overLaps.reduce(reducer) > 0;\n    };\n\n    const getBoatLaunchCoords = () => {\n        var newPosition = { top: 0, left: 0 };\n        const attempts = 100;\n        var i;\n        for (i = 0; i < attempts; i++) {\n            if (!overLapExists(newPosition)) {\n                return newPosition;\n            }\n            newPosition = {\n                top: newPosition.top + 10,\n                left: newPosition.left + 10,\n            };\n        }\n    };\n\n    const addBoat = () => {\n        getBoatLaunchCoords();\n        setSailBoatIds([...sailBoatIds, sailBoatIds.length]);\n        setPositions([...positions, getBoatLaunchCoords()]);\n        setBoatsDimensions([...boatsDimensions, INITIAL_DIMENSIONS])\n    };\n\n    const startTransforming = (e) => {\n        setIsTransforming(true)\n    }\n    const handleControllerMouseDown = (e, boatId, controllerId) => {\n        setIdOfSelectedBoat(boatId)\n        if (!isTransforming) {\n            startTransforming(e);\n        }\n        setControllerId(controllerId)\n        e.stopPropagation()\n    }\n    const handleControllerMouseUp = (e) => {\n        startTransforming(false);\n        setControllerId(null)\n        e.stopPropagation()\n    }\n\n    const calculateDimensionChange = (e) => {\n        const { left: offsetX, top: offsetY } = dragOffset;\n        let newDimensionsArr = [...boatsDimensions]\n        const boatDimensions = newDimensionsArr[idOfSelectedBoat]\n        if (controllerId === 'topLeft'){\n            const newPosition = {\n                top: offsetY,\n                left: offsetX\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: boatDimensions.height + (positions[idOfSelectedBoat].top - offsetY),\n                width: boatDimensions.width + (positions[idOfSelectedBoat].left - offsetX)\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newPositionArr = [...positions];\n            newPositionArr[idOfSelectedBoat] = newPosition;\n            setPositions(newPositionArr);\n        }\n\n        if (controllerId === 'topRight'){\n            const newPosition = {\n                top: offsetY,\n                left: positions[idOfSelectedBoat].left\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: boatDimensions.height + (positions[idOfSelectedBoat].top - offsetY),\n                width: e.clientX - positions[idOfSelectedBoat].left\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newArr = [...positions];\n            newArr[idOfSelectedBoat] = newPosition;\n            setPositions(newArr);\n        }\n\n        if (controllerId === 'bottomRight') {\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: offsetY - positions[idOfSelectedBoat].top,\n                width: e.clientX - positions[idOfSelectedBoat].left\n            }\n            setBoatsDimensions(newDimensionsArr)\n        }\n\n        if (controllerId == 'bottomLeft') {\n            const newPosition = {\n                top: positions[idOfSelectedBoat].top,\n                left: offsetX\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: offsetY - positions[idOfSelectedBoat].top,\n                width: boatDimensions.width + (positions[idOfSelectedBoat].left - offsetX)\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newArr = [...positions];\n            newArr[idOfSelectedBoat] = newPosition;\n            setPositions(newArr);\n        }\n        if (controllerId == 'top') {\n            const newPosition = {\n                top: offsetY,\n                left: positions[idOfSelectedBoat].left\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: boatDimensions.height + (positions[idOfSelectedBoat].top - offsetY),\n                width: boatDimensions.width\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newArr = [...positions];\n            newArr[idOfSelectedBoat] = newPosition;\n            setPositions(newArr);\n        }\n        if (controllerId === 'right') {\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: boatDimensions.height,\n                width: e.clientX - positions[idOfSelectedBoat].left\n            }\n            setBoatsDimensions(newDimensionsArr)\n        }\n        if (controllerId == 'bottom') {\n            const newPosition = {\n                top: positions[idOfSelectedBoat].top,\n                left: positions[idOfSelectedBoat].left\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: offsetY - positions[idOfSelectedBoat].top,\n                width: boatDimensions.width\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newArr = [...positions];\n            newArr[idOfSelectedBoat] = newPosition;\n            setPositions(newArr);\n        }\n        if (controllerId == 'left') {\n            const newPosition = {\n                top: offsetY,\n                left: offsetX\n            };\n            newDimensionsArr[idOfSelectedBoat] = {\n                height: boatDimensions.height,\n                width: boatDimensions.width + (positions[idOfSelectedBoat].left - offsetX)\n            }\n            setBoatsDimensions(newDimensionsArr)\n            let newArr = [...positions];\n            newArr[idOfSelectedBoat] = newPosition;\n            setPositions(newArr);\n        }\n    }\n    const getSailBoats = () => {\n        return sailBoatIds.map((sailBoatId) => {\n            return (\n                <SailBoat\n                    boatId={sailBoatId}\n                    boatDimensions={boatsDimensions[sailBoatId]}\n                    onMouseUp={handleMouseUp}\n                    onMouseDown={handleMouseDown}\n                    onMouseEnter={handleMouseEnter}\n                    onMouseLeave={handleMouseLeave}\n                    handleControllerMouseDown={handleControllerMouseDown}\n                    handleControllerMouseUp={handleControllerMouseUp}\n                    key={sailBoatId}\n                    position={positions[sailBoatId]}\n                    hover={hoverStates[sailBoatId]}\n                />\n            );\n        });\n    };\n    useEffect(() => {\n        console.log(\"use effect get sailboat\");\n        getSailBoats();\n    }, [sailBoatIds]);\n\n    const oceanStyles = {\n        backgroundColor: \"blue\",\n        height: \"500px\",\n        width: \"500px\",\n        position: \"relative\",\n    };\n\n    return (\n        <>\n            <button onClick={addBoat}>Launch Boat</button>\n            <div\n                onMouseMove={onMouseMove}\n                onMouseUp={handleMouseUp}\n                style={oceanStyles}\n            >\n                {getSailBoats()}\n            </div>\n        </>\n    );\n}\n","import './App.css';\nimport Ocean from './Ocean'\n\nfunction App() {\n\n  return (\n    <div style={{\n        userSelect: 'none'\n    }} className=\"App ocean\">\n        <Ocean />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}